{
    "welcome": {
        "title": "Welcome to Gephi Lite",
        "disclaimer-1": "Gephi Lite is currently a work in progress.",
        "disclaimer-2": "Feel free to check the GitHub project to see more about the upcoming features or to report bugs.",
        "logo": "Gephi logo",
        "open_recent": "Open recent",
        "open_graph": "Open graph file",
        "no_recent": "No remote file has been opened in that browser yet.",
        "samples": "Samples"
    },
    "gephi-lite": {
        "title": "Gephi Lite",
        "info": "More info on Gephi Lite"
    },
    "error": {
        "title": "Error",
        "unknown": "An unknown error has occurred.",
        "not_found": {
            "title": "Page Not Found",
            "subtitle": "The page you were looking for doesn't exist.",
            "paragraph": "You may have mistyped the address or the page may have moved."
        }
    },
    "user": {
        "avatar_alt": "{{name}}'s avatar"
    },
    "menu": {
        "open": {
            "cloud": "Open graph from {{provider}}",
            "remote": "Open remote graph",
            "local": "Open local graph"
        },
        "save": {
            "default": "Save",
            "cloud": "Save on {{provider}} as..."
        },
        "download": {
            "gexf": "Save graph locally",
            "gexf-error": "An error occurred while generating GEXF file"
        }
    },
    "providers": {
        "github": "GitHub"
    },
    "github": {
        "title": "GitHub authentication",
        "description": "You can log into GitHub from Gephi Lite, to save and load graph files directly as GitHub Gists.",
        "logged_as": "You are currently logged into GitHub as {{username}}.",
        "select_ui_language": "Select application language"
    },
    "auth": {
        "unauth_success": "Unauthentication successful",
        "sign_out": "Sign-out from GitHub",
        "sign_in": "Sign-in to GitHub"
    },
    "storage": {
        "cannot_restore": "Your graph cannot be restored.",
        "restore_successful": "Your work graph has been restored."
    },
    "context": {
        "title": "Data overview"
    },
    "selection": {
        "nodes_zero": "No selected node",
        "nodes_one": "One selected node",
        "nodes": "{{count}} selected nodes",
        "edges_zero": "No selected edge",
        "edges_one": "One selected edge",
        "edges": "{{count}} selected edges",
        "visible_nodes_zero": "No visible selected node",
        "visible_nodes_one": "One visible selected node",
        "visible_nodes": "{{count}} visible selected nodes",
        "visible_edges_zero": "No visible selected edge",
        "visible_edges_one": "One visible selected edge",
        "visible_edges": "{{count}} visible selected edges",
        "hidden_nodes_one": "One hidden selected node",
        "hidden_nodes": "{{count}} hidden selected nodes",
        "hidden_edges_one": "One hidden selected edge",
        "hidden_edges": "{{count}} hidden selected edges",
        "select_all": "Select all",
        "unselect_all": "Unselect all",
        "unselect_all_hidden_nodes": "Unselect all hidden edges",
        "unselect_all_hidden_edges": "Unselect all hidden edges",
        "unselect_nodes": "Unselect this node",
        "unselect_edges": "Unselect this edge",
        "focus_nodes": "Select only this node",
        "focus_edges": "Select only this edge",
        "empty_nodes": "This node has no attribute",
        "empty_edges": "This edge has no attribute",
        "node_no_label": "(Empty label)",
        "edge_no_label": "(Empty label)",
        "locate_on_graph": "Locate on the graph"
    },
    "appearance": {
        "title": "Appearance",
        "partition": "Partition",
        "ranking": "Ranking",
        "show_edges": "Show edges",
        "transformation_methods": {
            "title": "Transformation methods",
            "linear": "linear",
            "pow-2": "pow 2",
            "pow-3": "pow 3",
            "sqrt": "sqrt",
            "log": "log",
            "spline": "spline"
        },
        "color": {
            "title": "Color",
            "set_color_from": "Set color from...",
            "data": "Input file",
            "fixed": "A constant color",
            "source": "Source nodes",
            "target": "Target nodes",
            "quanti": "as numbers",
            "quali": "as strings",
            "default_value": "Color for {{items}} with no valid value",
            "color_all_items": "Color for all {{items}}",
            "data_description": "All {{items}} colors are as they are in the input data file.",
            "source_description": "Each edge is colored as its source.",
            "target_description": "Each edge is colored as its target.",
            "scale_point": "Scale point",
            "ranking_intro": "Add color points on this scale"
        },
        "labels": {
            "title": "Labels",
            "set_labels_from": "Set label from...",
            "set_labels_size_from": "Set label sizes from...",
            "data": "Input data",
            "fixed": "A constant text",
            "fixed_label": "Label for every {{items}}",
            "fixed_label_size": "Label size for every {{items}}",
            "none": "No label",
            "fixed_size": "Fixed size",
            "size": "{{items}} size",
            "default_value": "Label for {{items}} with no valid value",
            "size_coef": "Labels sizes (higher makes labels appear bigger)",
            "adapts_to_zoom": "How much labels should grow with zoom",
            "density": "How many labels should appear any time",
            "data_description": "All {{items}} labels are as they are in the input data file.",
            "none_description": "All {{items}} have no displayed label."
        },
        "size": {
            "title": "Size",
            "set_size_from": "Set size from...",
            "data": "Input file",
            "fixed": "A constant size",
            "default_value": "Size for {{items}} with no valid value",
            "size_all_items": "Size for all {{items}}",
            "data_description": "All {{items}} sizes are as they are in the input data file."
        },
        "no_caption": "(no caption)"
    },
    "filters": {
        "title": "Filters",
        "description": "This panel allows to filter the graph by stacking filters.",
        "filter": "Filter",
        "add_filter": "Add filter",
        "full_graph": "Full graph",
        "using": "Using",
        "topological": "Topology",
        "desactivated": "Desactivated filter, click to reactivate",
        "no_concurrent_edit": "Only one filter can be edited at a time. Confirm current edition to edit this filter.",
        "range": "range",
        "terms": "exact values",
        "script": "Custom filter",
        "activated": "Activated filter",
        "create_filter": "Create filter",
        "keepMissingValues": "Keep missing values",
        "inapplicable": "Filter disabled: only one value available"
    },
    "edition": {
        "create_nodes": "Create new node",
        "create_edges": "Create new edge",
        "create_nodes_success": "The node has successfully been created.",
        "create_edges_success": "The edge has successfully been created.",
        "update_this_nodes": "Edit this node",
        "update_this_edges": "Edit this edge",
        "update_nodes": "Edit existing node",
        "update_edges": "Edit existing edge",
        "update_nodes_success": "The node has successfully been updated.",
        "update_edges_success": "The edge has successfully been updated.",
        "delete_this_nodes": "Delete this node",
        "delete_this_edges": "Delete this edge",
        "delete_nodes_zero": "Delete nodes",
        "delete_nodes_one": "Delete one node",
        "delete_nodes": "Delete {{count}} nodes",
        "delete_edges_zero": "Delete edges",
        "delete_edges_one": "Delete one edge",
        "delete_edges": "Delete {{count}} edges",
        "confirm_delete_nodes_one": "Are you sure you want to delete this one node?",
        "confirm_delete_nodes": "Are you sure you want to delete {{count}} nodes?",
        "confirm_delete_edges_one": "Are you sure you want to delete this one edge?",
        "confirm_delete_edges": "Are you sure you want to delete {{count}} edges?",
        "search_nodes": "Search on node labels..."
    },
    "graph": {
        "title": "Graph",
        "control": {
            "zoomIn": "Zoom In",
            "zoomOut": "Zoom Out",
            "zoomReset": "See the whole graph",
            "fullscreenEnter": "Enter fullscreen mode",
            "fullscreenExit": "Exit fullscreen"
        },
        "metadata": {
            "title": "Metadata",
            "graph-title": "Title",
            "description": "Description",
            "keywords": "Keywords",
            "authors": "Authors",
            "graph-type": "Graph Type"
        },
        "partitioning": {
            "title": "Partitioning",
            "description": "To apply appearance or filters differently on different groups of {{items}}, partition your graph using any node qualitative attribute.",
            "partition": "Partition {{items}} on",
            "status_no_partition": "{{items}} are not partitioned",
            "status_item_preview": "The {{items}} will be grouped into",
            "status_item": "The {{items}} are grouped into",
            "status_partition": "{{nbPartitions}} partitions using the '{{attribute}}' attribute.",
            "warning_nbMissing": "{{nbMissingValues}} {{items}} don't have a value for this attribute.",
            "missing_partition_preview": "They will be grouped into a 'missing value' partition.",
            "missing_partition": "They are grouped into a 'missing value' partition."
        },
        "model": {
            "title": "Attributes' Model",
            "no_attributes": "There is no attribute in the model yet.",
            "attribute": {
                "qualitative": "Qualitative",
                "quantitative": "Quantitative"
            },
            "directed": "Directed",
            "undirected": "Undirected",
            "mixed": "Mixed",
            "nodes_one": "node",
            "nodes_zero": "node",
            "nodes": "nodes",
            "edges_one": "edge",
            "edges_zero": "edge",
            "edges": "edges",
            "nodes-data": {
                "id": "Node ID",
                "label": "Node label",
                "size": "Node size",
                "color": "Node color",
                "x": "Node x position",
                "y": "Node y position",
                "attributes": "Other attributes",
                "attribute-name": "Attribute name",
                "attribute-value": "Attribute value",
                "new-attribute": "Add new attribute"
            },
            "edges-data": {
                "id": "Edge ID",
                "source": "Edge source",
                "target": "Edge target",
                "label": "Edge label",
                "color": "Edge color",
                "weight": "Edge weight",
                "attributes": "Other attributes",
                "attribute-name": "Attribute name",
                "attribute-value": "Attribute value",
                "new-attribute": "Add new attribute"
            }
        },
        "open": {
            "title": "Open a graph file",
            "local": {
                "title": "Open a local file",
                "dragndrop_text": "Drag'n'drop a GEXF file",
                "success": "File {{filename}} has been successfully loaded",
                "error": "An error occurred while opening the file. Please check that the file is a valid GEXF."
            },
            "remote": {
                "title": "Open an url",
                "url-field": "URL of the GEXF file",
                "success": "File {{filename}} has been successfully loaded",
                "error": "An error occurred while opening the file. Please check your connectivity and that the file is a valid GEXF."
            },
            "cloud": {
                "title": "Open a file from {{provider}}",
                "no-data": "You have no GEXF file saved on {{provider}}",
                "file-open-external": "Open {{filename}} on {{provider}}",
                "select-file": "Select a file",
                "success": "File {{filename}} has been successfully loaded",
                "error": "A technical error occurred. Please check your connectivity or try later."
            }
        },
        "save": {
            "title": "Save graph",
            "cloud": {
                "title": "Save in {{provider}} as...",
                "field": {
                    "filename": "Filename",
                    "description": "Description",
                    "isPublic": "Create a public gist"
                },
                "success": "File {{filename}} has been successfully saved",
                "error": "An error occurred while saving your graph. Please check your connectivity or try later."
            }
        },
        "export": {
            "title": "Export graph",
            "png": {
                "title": "Export PNG snapshot",
                "success": "Your graph PNG export has successfully been saved.",
                "fields": {
                    "filename": "Filename",
                    "width": "Width (in pixels)",
                    "height": "Height (in pixels)",
                    "preserve_camera": "Preserve current camera position"
                }
            }
        },
        "caption": {
            "color": "Color {{itemType}} by",
            "size": "Size {{itemType}} by",
            "title": "Caption",
            "disabled": "Caption is available once appearance has been set."
        }
    },
    "statistics": {
        "title": "Statistics",
        "compute_one": "Compute metric",
        "compute": "Compute metrics",
        "success_one": "The {{items}} metric \"{{metrics}}\" has been added to the data.",
        "success": "The {{items}} metrics \"{{metrics}}\" have been added to the data.",
        "description": "This panel allows computing new attributes to the nodes or edges of the graph. These attributes can later be used in the other panels, for appearance or filtering for instance.",
        "placeholder": "Select an algorithm",
        "attributes_placeholder": "None",
        "nodes_attribute_already_exists": "A node attribute named \"{{field}}\" already exists. Its values will be overridden.",
        "edges_attribute_already_exists": "An edge attribute named \"{{field}}\" already exists. Its values will be overridden.",
        "nodes": {
            "louvain": {
                "title": "Louvain community detection",
                "description": "This algorithm aims at splitting the nodes as densely connected groups.",
                "attributes": {
                    "modularityClass": "Modularity class attribute name"
                },
                "parameters": {
                    "getEdgeWeight": {
                        "title": "Edge weight attribute",
                        "description": "An edge attribute that would represent edge weights."
                    },
                    "fastLocalMoves": {
                        "title": "Fast local moves",
                        "description": "Whether to use a well-known optimization relying on a queue set to traverse the graph more efficiently."
                    },
                    "randomWalk": {
                        "title": "Random walk",
                        "description": "Whether to traverse the graph randomly."
                    },
                    "resolution": {
                        "title": "Resolution",
                        "description": "An increased resolution should produce more communities."
                    }
                }
            },
            "pagerank": {
                "title": "PageRank",
                "attributes": {
                    "pagerank": "PageRank attribute name"
                },
                "parameters": {
                    "getEdgeWeight": {
                        "title": "Edge weight attribute"
                    },
                    "alpha": {
                        "title": "Alpha"
                    },
                    "maxIterations": {
                        "title": "Max iterations"
                    },
                    "tolerance": {
                        "title": "Tolerance"
                    }
                }
            },
            "betweennessCentrality": {
                "title": "Betweenness centrality",
                "attributes": {
                    "betweennessCentrality": "Betweenness centrality attribute name"
                },
                "parameters": {
                    "getEdgeWeight": {
                        "title": "Edge weight attribute"
                    },
                    "normalize": {
                        "title": "Normalize output?"
                    }
                }
            },
            "degree": {
                "title": "Degree",
                "attributes": {
                    "degree": "Degree attribute name"
                },
                "parameters": {
                    "getEdgeWeight": {
                        "title": "Edge weight attribute"
                    },
                    "kind": {
                        "title": "Type of degree",
                        "values": {
                            "degree": "Degree",
                            "inDegree": "Incoming degree",
                            "outDegree": "Outgoing degree"
                        }
                    }
                }
            },
            "hits": {
                "title": "HITS",
                "attributes": {
                    "authorities": "Authority score attribute name",
                    "hubs": "Hub score attribute name"
                },
                "parameters": {
                    "getEdgeWeight": {
                        "title": "Edge weight attribute"
                    },
                    "maxIterations": {
                        "title": "Max iterations"
                    },
                    "normalize": {
                        "title": "Normalize output?"
                    },
                    "tolerance": {
                        "title": "Tolerance"
                    }
                }
            },
            "nodescript": {
                "title": "Custom node metric",
                "description": "Define a function that compute a metric for a node.",
                "attributes": {
                    "custom": "Attribute name on which to store the metric"
                }
            }
        },
        "edges": {
            "disparity": {
                "title": "Disparity",
                "attributes": {
                    "disparity": "Disparity attribute name"
                },
                "parameters": {
                    "getEdgeWeight": {
                        "title": "Edge weight attribute"
                    }
                }
            },
            "simmelianStrength": {
                "title": "Simmelian strength",
                "attributes": {
                    "simmelianStrength": "Simmelian strength attribute name"
                }
            },
            "edgescript": {
                "title": "Custom edge metric",
                "description": "Define a function that compute a metric for an edge.",
                "attributes": {
                    "custom": "Attribute name on which to store the metric"
                }
            }
        }
    },
    "layouts": {
        "title": "Layout",
        "description": "This panel allows computing new coordinates to nodes of the graph. ",
        "placeholder": "Select a layout algorithm",
        "exec": {
            "success": "Layout \"{{layout}}\" has successfully been applied.",
            "started": "Layout {{layout}} is running",
            "stopped": "Layout {{layout}} has been stopped"
        },
        "random": {
            "title": "Random",
            "description": "Random layout positioning every node by choosing each coordinates uniformly at random on the interval [0, 1)",
            "parameters": {
                "scale": {
                    "title": "Scale",
                    "description": "Scale of the layout"
                },
                "center": {
                    "title": "Center",
                    "description": "Center of the layout"
                }
            }
        },
        "circular": {
            "title": "Circular",
            "description": "Arranges the node in a circle",
            "parameters": {
                "scale": {
                    "title": "Scale",
                    "description": "Scale of the layout"
                },
                "center": {
                    "title": "Center",
                    "description": "Center of the layout"
                }
            }
        },
        "circlePack": {
            "title": "CirclePack",
            "description": "Arranges the nodes as a bubble chart, according to specified attributes",
            "parameters": {
                "scale": {
                    "title": "Scale",
                    "description": "Scale of the layout"
                },
                "groupingField": {
                    "title": "Hierarchy attribute",
                    "description": "An optional attribute to use to group the nodes"
                },
                "center": {
                    "title": "Center",
                    "description": "Center of the layout"
                }
            }
        },
        "fa2": {
            "title": "ForceAtlas2",
            "buttons": {
                "autoSettings": {
                    "title": "Guess settings",
                    "description": "Generates settings that fit the current graph the best"
                }
            },
            "parameters": {
                "adjustSizes": {
                    "title": "Adjust sizes?",
                    "description": "Should the node’s sizes be taken into account?"
                },
                "barnesHutOptimize": {
                    "title": "barnesHutOptimize",
                    "description": "Whether to use the Barnes-Hut approximation to compute repulsion in O(n*log(n)) rather than default O(n^2), n being the number of nodes"
                },
                "barnesHutTheta": {
                    "title": "barnesHutTheta",
                    "description": "Barnes-Hut approximation theta parameter"
                },
                "edgeWeightInfluence": {
                    "title": "Edge weight influence",
                    "description": "Influence of the edge’s weights on the layout"
                },
                "gravity": {
                    "title": "Gravity",
                    "description": "Strength of the layout’s gravity"
                },
                "linLogMode": {
                    "title": "linLog mode",
                    "description": "Whether to use Noack’s LinLog model."
                },
                "outboundAttractionDistribution": {
                    "title": "Out bound attraction distribution"
                },
                "scalingRatio": {
                    "title": "Scaling ratio"
                },
                "slowDown": {
                    "title": "Slow down?"
                },
                "strongGravityMode": {
                    "title": "Strong gravity mode?"
                }
            }
        },
        "force": {
            "title": "Force directed",
            "parameters": {
                "attraction": {
                    "title": "Attraction",
                    "description": "Importance of the attraction force, that attracts each pair of connected nodes like elastics"
                },
                "repulsion": {
                    "title": "Repulsion",
                    "description": "Importance of the repulsion force, that attracts each pair of nodes like magnets"
                },
                "gravity": {
                    "title": "Gravity",
                    "description": "Importance of the gravity force, that attracts all nodes to the center"
                },
                "inertia": {
                    "title": "Inertia",
                    "description": "Percentage of a node vector displacement that is preserved at each step. 0 means no inertia, 1 means no friction"
                },
                "maxMove": {
                    "title": "Maximum move",
                    "description": "Maximum length a node can travel at each step, in pixel"
                }
            }
        },
        "noverlap": {
            "title": "Noverlap",
            "description": "Anti-collision layout algorithm",
            "parameters": {
                "gridSize": {
                    "title": "Grid size",
                    "description": "Number of grid cells horizontally and vertically subdivising the graph’s space. This is used as an optimization scheme. Set it to 1 and you will have O(n²) time complexity, which can sometimes perform better with very few nodes."
                },
                "margin": {
                    "title": "Margin",
                    "description": "Margin to keep between nodes"
                },
                "expansion": {
                    "title": "Expansion",
                    "description": "Percentage of current space that nodes could attempt to move outside of"
                },
                "ratio": {
                    "title": "Ratio",
                    "description": "Ratio scaling node sizes"
                },
                "speed": {
                    "title": "Speed",
                    "description": "Dampening factor that will slow down node movements to ease the overall process"
                }
            }
        },
        "script": {
            "title": "Custom layout",
            "description": "Write your own layout by creating a function that returns a {x,y} object for each node"
        }
    },
    "file": {
        "title": "Data management",
        "login_capabilities": "You can log into GitHub from Gephi Lite, to save and load graph files directly as GitHub Gists:"
    },
    "common": {
        "add": "Add",
        "all": "All",
        "apply": "Apply",
        "cancel": "Cancel",
        "clear": "Clear",
        "close": "Close",
        "collapse": "Collapse",
        "confirm": "Confirm",
        "copy": "Copy",
        "created": "Created",
        "delete": "Delete",
        "edit": "Edit",
        "expand": "Expand",
        "filename": "Filename",
        "hide": "Hide",
        "load-more": "Load more",
        "loading": "Loading",
        "min": "Min",
        "max": "Max",
        "none": "None",
        "open": "Open",
        "open_file": "Open {{filename}}",
        "open_code_editor": "Open code editor",
        "remove": "Remove",
        "reset": "Reset",
        "save": "Save",
        "save-and-run": "Save and run",
        "select": "Select...",
        "start": "Start",
        "stop": "Stop",
        "size": "Size",
        "show": "Show",
        "show_more": "Show more",
        "show_less": "Show less",
        "submit": "Submit",
        "updated": "Updated"
    },
    "cloud": {
        "github": {
            "title": "GitHub",
            "auth": {
                "title": "GitHub authentification",
                "asking_for_device_code": "Asking github for device code",
                "copy_code": "Copy the code below, and click on \"Open GitHub\" button. It will opened a new tab, on which GitHub will ask you the code",
                "copy_success": "Code saved in clipboard",
                "waiting_validation": "Waiting validation"
            }
        }
    },
    "search": {
        "graph": {
            "placeholder": "Search for nodes, edges ...",
            "no_result": "No results",
            "help": "Type something to search",
            "other_result": "... and {{count}} other results",
            "select_all_nodes": "Add {{count}} nodes in the selection",
            "select_all_edges": "Add {{count}} edges in the selection"
        },
        "nodes": {
            "placeholder": "Search a node ...",
            "no_result": "No node found",
            "help": "Type something to find a node",
            "other_result": "... and {{count}} other nodes"
        },
        "edges": {
            "placeholder": "Search an edge...",
            "no_result": "No edge found",
            "help": "Type something to find an edge",
            "other_result": "... and {{count}} other edges"
        }
    }
}
