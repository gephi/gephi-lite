@use "sass:map";

$table-editable-columns-cell-hover-bg: color-mix(
  in hsl,
  var(--gl-container-highest-bg),
  var(--gl-body-color) $gl-sys-proportion-cell-hover-color-mix
);

.data-table {
  background: var(--gl-body-bg);
  display: grid;
  grid-template-rows: auto 1fr;
  max-width: 100%;
  height: 100%;
  overflow: auto;

  &.is-resizing {
    cursor: col-resize;

    .resizer:not(.is-resizing) {
      display: none;
    }
  }

  thead,
  tbody {
    border-color: var(--gl-table-border-color);
  }

  thead {
    position: sticky;
    z-index: 2;
    top: 0;

    tr {
      display: flex;
      width: fit-content;
      border-width: 0;
      border-bottom-width: var(--bs-border-width);

      th {
        display: flex;
        font-weight: $font-weight-base;
        position: relative;
        color: var(--gl-body-color);

        border-width: 0;
        border-right-width: var(--bs-border-width);

        background: var(--gl-table-column-header-editable-bg);
        &.protected {
          background: var(--gl-table-column-header-non-editable-bg);
        }

        & > div.content-wrapper {
          width: 100%;
          display: flex;
          flex-direction: row;
          align-items: center;

          & > * {
            flex-shrink: 0;
          }

          & > .column-title {
            flex-shrink: 1;
            flex-grow: 1;
            @extend .text-ellipsis;
          }
        }

        .resizer {
          position: absolute;
          top: 0;
          height: 100%;
          right: -1px;
          width: 5px;
          background: color-mix(
            in hsl,
            var(--gl-table-column-header-editable-bg),
            var(--gl-body-color) $gl-sys-proportion-component-hover-color-mix
          );
          cursor: col-resize;
          user-select: none;
          touch-action: none;

          &.is-resizing {
            opacity: 1;
            background: color-mix(
              in hsl,
              var(--gl-table-column-header-editable-bg),
              var(--gl-body-color) $gl-sys-proportion-component-active-color-mix
            );
          }
        }

        @media (hover: hover) {
          .resizer {
            opacity: 0;
          }

          &:hover .resizer {
            opacity: 1;
          }
        }
      }
    }
  }

  tbody {
    display: grid;
    position: relative;

    tr {
      display: flex;
      position: absolute;
      min-height: 2em;
      border-width: 0;
      border-bottom-width: var(--bs-border-width);

      td {
        display: flex;
        line-height: 1.4em;
        border-width: 0;
        border-right-width: var(--bs-border-width);

        padding: map.get($spacers, 1) map.get($spacers, 2);

        background: var(--gl-table-column-cell-non-editable-bg);
        &.editable {
          background: var(--gl-table-column-cell-editable-bg);

          &:hover {
            background: $table-editable-columns-cell-hover-bg;
          }
        }

        &.editable {
          padding: 0;

          .tether-target {
            width: 100%;
            padding: map.get($spacers, 1) 0;
            @extend .text-ellipsis;
          }

          .data-cell {
            width: 100%;
            padding: map.get($spacers, 1);
            @extend .text-ellipsis;
          }
        }
      }
    }
  }
}

.data-cell-edition {
  @extend .gl-shadow-high;
  @extend .gl-rounded-2;
  @extend .gl-border;
  @extend .gl-p-2;

  z-index: $zindex-tooltip;
  background: var(--gl-container-highest-bg);

  &:not(.data-cell-edition-color) {
    form {
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: $gl-spacers-2;

      & > *:first-child {
        flex-grow: 1;
      }
    }
  }
  &.data-cell-edition-color {
    form {
      display: flex;
      flex-direction: column;
      align-items: end;
      gap: $gl-spacers-2;
    }
  }
}
