{
  "welcome": {
    "title": "Welcome to Gephi Lite",
    "disclaimer-1": "Gephi Lite is currently a work in progress.",
    "disclaimer-2": "Feel free to check the GitHub project to see more about the upcoming features or to report bugs.",
    "logo": "Gephi logo",
    "open_recent": "Open recent",
    "open_graph": "Open graph file",
    "no_recent": "No remote file has been opened in that browser yet.",
    "samples": "Samples",
    "website": "website",
    "documentation": "documentation"
  },
  "gephi-lite": {
    "title": "Gephi Lite",
    "info": "More info on Gephi Lite",
    "open_welcome_modal": "Open welcome modal",
    "github_link": "Gephi Lite on GitHub"
  },
  "error": {
    "title": "Error",
    "unknown": "An unknown error has occurred.",
    "message": "Sorry, we are working to make gephi-lite better, but bugs still happened...<br />It will help us if you can open an issue on GitHub with a description of what you were doing.",
    "retry": "Retry",
    "reset": "Reset everything",
    "report": "Report error",
    "not_found": {
      "title": "Page Not Found",
      "subtitle": "The page you were looking for doesn't exist.",
      "paragraph": "You may have mistyped the address or the page may have moved."
    },
    "form": {
      "required": "Field is required",
      "unique": "Value must be unique, and a data with the same value already exist",
      "field_already_exists": "The column with label \"{{label}}\" already uses the id \"{{id}}\"."
    },
    "deprecated": {
      "gexf_search_params": "The `gexf=` url params to open a graph file has been renamed as `file=` in version 0.4.0. Using gexf params is deprecated  and might be removed in future version. Please use `file=` instead."
    }
  },
  "user": {
    "avatar_alt": "{{name}}'s avatar"
  },
  "providers": {
    "github": "GitHub"
  },
  "github": {
    "title": "GitHub authentication",
    "description": "You can log into GitHub from Gephi Lite, to save and load graph files directly as GitHub Gists.",
    "logged_as": "You are currently logged into GitHub as {{username}}.",
    "select_ui_language": "Select application language"
  },
  "auth": {
    "unauth_success": "Unauthentication successful",
    "sign_out": "Sign-out from GitHub",
    "sign_in": "Sign-in to GitHub"
  },
  "storage": {
    "cannot_restore": "Your graph cannot be restored.",
    "restore_successful": "Your work graph has been restored."
  },
  "selection": {
    "nodes_zero": "<strong>No</strong> selected node",
    "nodes_one": "<strong>One</strong> selected node",
    "nodes": "<strong>{{count, number}}</strong> selected nodes",
    "edges_zero": "<strong>No</strong> selected edge",
    "edges_one": "<strong>One</strong> selected edge",
    "edges": "<strong>{{count, number}}</strong> selected edges",
    "visible_nodes_zero": "No visible selected node",
    "visible_nodes_one": "One visible selected node",
    "visible_nodes": "{{count, number}} visible selected nodes",
    "visible_edges_zero": "No visible selected edge",
    "visible_edges_one": "One visible selected edge",
    "visible_edges": "{{count, number}} visible selected edges",
    "hidden_nodes_one": "One hidden selected node",
    "hidden_nodes": "{{count, number}} hidden selected nodes",
    "hidden_edges_one": "One hidden selected edge",
    "hidden_edges": "{{count, number}} hidden selected edges",
    "select_all": "Select all",
    "select_node_neighbors": "Select node's neighbors",
    "unselect_all": "Unselect all",
    "unselect_all_hidden_nodes": "Unselect all hidden edges",
    "unselect_all_hidden_edges": "Unselect all hidden edges",
    "unselect_nodes": "Unselect this node",
    "unselect_edges": "Unselect this edge",
    "focus_nodes": "Select only this node",
    "focus_edges": "Select only this edge",
    "empty_nodes": "This node has no attribute",
    "empty_edges": "This edge has no attribute",
    "node_no_label": "(Empty label)",
    "edge_no_label": "(Empty label)",
    "no_value": "No value",
    "locate_on_graph": "Locate on the graph",
    "open_in_data": "Show in Data",
    "open_in_graph": "Show in Graph",
    "cursor": "Simple selection",
    "marquee": "Rectangle selection",
    "lasso": "Lasso selection"
  },
  "appearance": {
    "title": "Appearance",
    "partition": "Partition",
    "ranking": "Ranking",
    "show_edges": "Show edges",
    "no_caption": "(no caption)",
    "menu": {
      "nodes": "Nodes",
      "edges": "Edges",
      "labels": "Labels",
      "background": "Background"
    },
    "transformation_methods": {
      "title": "Transformation methods",
      "linear": "linear",
      "pow-2": "pow 2",
      "pow-3": "pow 3",
      "sqrt": "sqrt",
      "log": "log",
      "spline": "spline"
    },
    "graph": {
      "background_color": "Background color",
      "layout_grid_color": "Layout evaluation grid color"
    },
    "color": {
      "title": "Color",
      "set_color_from": "Set color from...",
      "data": "Input file",
      "fixed": "A constant color",
      "source": "Source nodes",
      "target": "Target nodes",
      "default_value": "Color for {{items}} with no valid value",
      "color_all_items": "Color for all {{items}}",
      "data_description": "All {{items}} colors are as they are in the input data file.",
      "source_description": "Each edge is colored as its source.",
      "target_description": "Each edge is colored as its target.",
      "scale_point": "Scale point",
      "ranking_intro": "Add color points on this scale",
      "enable_color_shading": "Shade {{items}} colors",
      "shading_attribute": "Shade {{items}} along attribute...",
      "shading_color": "Target color",
      "shading_factor": "Shading degree",
      "shading_factor_description": "Defines how much {{items}} should be shaded. Use 1 to shade all the way to the target color, or 0.1 to shade only 10% of the way, for instance.",
      "shading_caption_1": "The {{items}} are shaded to the color",
      "shading_caption_2": "according to their {{attribute}} values."
    },
    "labels": {
      "title": "Labels",
      "set_labels_from": "Set label from...",
      "set_labels_size_from": "Set label sizes from...",
      "data": "Input data",
      "fixed": "A constant text",
      "fixed_label": "Label for every {{items}}",
      "fixed_label_size": "Label size for every {{items}}",
      "none": "No label",
      "fixed_size": "Fixed size",
      "size": "{{items}} size",
      "default_value": "Label for {{items}} with no valid value",
      "size_coef": "Labels sizes (higher makes labels appear bigger)",
      "adapts_to_zoom": "How much labels should grow with zoom",
      "density": "How many labels should appear any time",
      "data_description": "All {{items}} labels are as they are in the input data file.",
      "none_description": "All {{items}} have no displayed label.",
      "ellipsis": {
        "enabled": "Shorten labels",
        "max_length": "Maximum labels length"
      }
    },
    "images": {
      "title": "Images",
      "set_labels_from": "Set image from...",
      "data": "Input data",
      "fixed": "A constant URL",
      "fixed_label": "Same image for every {{items}}",
      "none": "No images",
      "default_value": "Image for {{items}} with no valid value",
      "data_description": "All {{items}} images are as they are in the input data file.",
      "none_description": "All {{items}} have no displayed image."
    },
    "zIndex": {
      "title": "Depth",
      "description": "Allows customizing which {{items}} should be rendered in the front.",
      "none": "Default (faster)",
      "set_values_from": "Set depth from...",
      "none_description": "Gephi Lite renders all {{items}} in the order it meets them.",
      "reverse_order": "Inverse order of elements (lower values on front, higher in the back)",
      "default_value": ""
    },
    "size": {
      "title": "Size",
      "set_size_from": "Set size from...",
      "data": "Input file",
      "fixed": "A constant size",
      "default_value": "Size for {{items}} with no valid value",
      "interpolate": "Interpolate between custom min and max values",
      "size_all_items": "Size for all {{items}}",
      "data_description": "All {{items}} sizes are as they are in the input data file."
    }
  },
  "filters": {
    "title": "Filters",
    "description": "This panel allows to filter the graph by stacking filters.",
    "filter": "Filter",
    "add_filter": "Add filter",
    "full_graph": "Full graph",
    "visible_graph": "Visible graph",
    "intermediate_graph": "Intermediate graph",
    "using": "Using",
    "topological": "Topology",
    "custom_script": "Custom script",
    "desactivated": "Desactivated filter, click to reactivate",
    "no_concurrent_edit": "Only one filter can be edited at a time. Confirm current edition to edit this filter.",
    "script": "Custom filter",
    "activated": "Activated filter",
    "create_filter": "Create filter",
    "keepMissingValues": "Keep missing values",
    "inapplicable": "Range is only displayed when there is at least two values to filter on.",
    "insert": "Insert filter",
    "disable_following": "Show the graph",
    "disable_following_subtitle": "eg. disable all filters after",
    "nodes_fields": "Nodes attributes",
    "edges_fields": "Edges attributes",
    "create": {
      "what_kind": "What kind of filter do you want to create?",
      "topological_description": "These filters allow thinning the size of the network using various topological methods.",
      "custom_script_description": "These filters allow writing a JavaScript function that will tell for each node or edge if it should be kept.",
      "nodes_attributes_description": "These filters allow filtering the nodes based on their attributes. Some types of attributes are not usable as filters, in which case they are disabled.",
      "no_nodes_attributes": "No node attribute",
      "edges_attributes_description": "These filters allow filtering the edges based on their attributes. Some types of attributes are not usable as filters, in which case they are disabled.",
      "no_edges_attributes": "No edge attribute"
    },
    "range": {
      "from": "from {{min}}",
      "to": "less than or equal {{max}}",
      "from_to": "from {{min}} to {{max}}"
    },
    "topology": {
      "largestConnectedComponent": {
        "label": "Connected component",
        "number": "Number of largest components to keep",
        "summary_one": "The largest",
        "summary": "The {{number}} largest"
      },
      "kCore": {
        "label": "K-Core",
        "core": "k: minimum degree nodes should have",
        "summary": "{{core}}-Core"
      },
      "ego": {
        "label": "Ego network",
        "ego": "Ego node",
        "core": "depth: maximum distance to ego",
        "summary_depth": "at depth {{depth}}",
        "summary_direction": "following {{direction}}",
        "direction": {
          "label": "Follow",
          "in": "inbound edges",
          "out": "outbound edges",
          "both": "any edges"
        }
      }
    }
  },
  "edition": {
    "data_creation": "Data creation",
    "create_nodes": "Create new node",
    "create_edges": "Create new edge",
    "create_nodes_success": "The node has successfully been created.",
    "create_edges_success": "The edge has successfully been created.",
    "create_nodes_field": "Create nodes attribute",
    "create_edges_field": "Create edges attribute",
    "create_nodes_field_success": "The node attribute has successfully been created.",
    "create_edges_field_success": "The edge attribute has successfully been created.",
    "create_nodes_scripted_field": "Create nodes scripted attribute",
    "create_edges_scripted_field": "Create edges scripted attribute",
    "create_nodes_scripted_field_success": "The scripted node attribute has successfully been created.",
    "create_edges_scripted_field_success": "The scripted edge attribute has successfully been created.",
    "update_this_nodes": "Edit this node",
    "update_this_edges": "Edit this edge",
    "update_nodes": "Edit existing node",
    "update_edges": "Edit existing edge",
    "update_nodes_success": "The node has successfully been updated.",
    "update_edges_success": "The edge has successfully been updated.",
    "update_multiple_nodes": "Edit existing nodes",
    "update_multiple_edges": "Edit existing edges",
    "update_multiple_nodes_success": "The {{count, number}} nodes have successfully been updated.",
    "update_multiple_edges_success": "The {{count, number}} edges have successfully been updated.",
    "update_nodes_field": "Edit nodes attribute",
    "update_edges_field": "Edit edges attribute",
    "update_nodes_field_success": "The node attribute has successfully been updated.",
    "update_edges_field_success": "The edge attribute has successfully been updated.",
    "delete_this_nodes": "Delete this node",
    "delete_this_edges": "Delete this edge",
    "delete_nodes_zero": "Delete nodes",
    "delete_nodes_one": "Delete one node",
    "delete_nodes": "Delete {{count, number}} nodes",
    "delete_edges_zero": "Delete edges",
    "delete_edges_one": "Delete one edge",
    "delete_edges": "Delete {{count, number}} edges",
    "confirm_delete_nodes_one": "Are you sure you want to delete this one node?",
    "confirm_delete_nodes": "Are you sure you want to delete {{count, number}} nodes?",
    "confirm_delete_edges_one": "Are you sure you want to delete this one edge?",
    "confirm_delete_edges": "Are you sure you want to delete {{count, number}} edges?",
    "delete_nodes_success_one": "The node has successfully been deleted.",
    "delete_nodes_success": "The {{count, number}} nodes have successfully been deleted.",
    "delete_edges_success_one": "The edge has successfully been deleted.",
    "delete_edges_success": "The {{count, number}} edges have successfully been deleted.",
    "delete_selected_nodes_one": "Delete selected node",
    "delete_selected_nodes": "Delete selected nodes",
    "delete_selected_edges_one": "Delete selected edge",
    "delete_selected_edges": "Delete selected edges",
    "edit_selected_nodes_one": "Edit selected node",
    "edit_selected_nodes": "Edit selected nodes",
    "edit_selected_edges_one": "Edit selected edge",
    "edit_selected_edges": "Edit selected edges",
    "merge_selected_nodes": "Merge selected nodes",
    "search_nodes": "Search on node labels...",
    "delete_attribute": "Delete attribute",
    "delete_nodes_attributes": "Delete the '{{name}}' node attribute",
    "delete_edges_attributes": "Delete the '{{name}}' edge attribute",
    "confirm_delete_attributes": "This deletion will remove {{nbValues}} values from the graph. Are you sure you want to delete the attribute {{name}}?",
    "delete_attributes_success": "The '{{name}}' attribute has been deleted.",
    "multi": {
      "select_attribute": "Select the attribute to edit for the selection",
      "select_value": "Select a value to apply for the selection"
    },
    "code_editor": "Code editor",
    "all_nodes": "All nodes",
    "filtered_nodes": "Filtered nodes only",
    "selected_nodes": "Selected nodes only",
    "all_edges": "All edges",
    "filtered_edges": "Filtered edges only",
    "selected_edges": "Selected edges only"
  },
  "graph": {
    "title": "Graph",
    "control": {
      "zoomIn": "Zoom In",
      "zoomOut": "Zoom Out",
      "zoomReset": "See the whole graph",
      "fullscreenEnter": "Enter fullscreen mode",
      "fullscreenExit": "Exit fullscreen"
    },
    "metadata": {
      "title": "Metadata",
      "graph-title": "Title",
      "description": "Description",
      "keywords": "Keywords",
      "authors": "Authors",
      "graph-type": "Graph Type"
    },
    "partitioning": {
      "title": "Partitioning",
      "description": "To apply appearance or filters differently on different groups of {{items}}, partition your graph using any category attribute.",
      "partition": "Partition {{items}} on",
      "status_no_partition": "{{items}} are not partitioned",
      "status_item_preview": "The {{items}} will be grouped into",
      "status_item": "The {{items}} are grouped into",
      "status_partition": "{{nbPartitions}} partitions using the '{{attribute}}' attribute.",
      "warning_nbMissing": "{{nbMissingValues}} {{items}} don't have a value for this attribute.",
      "missing_partition_preview": "They will be grouped into a 'missing value' partition.",
      "missing_partition": "They are grouped into a 'missing value' partition."
    },
    "model": {
      "title": "Attributes' Model",
      "no_attributes": "There is no attribute in the model yet.",
      "directed": "Directed",
      "undirected": "Undirected",
      "mixed": "Mixed",
      "directed_graph": "Directed graph",
      "undirected_graph": "Undirected graph",
      "mixed_graph": "Mixed graph",
      "graph": "graph",
      "nodes_one": "node",
      "nodes_zero": "node",
      "nodes": "nodes",
      "edges_one": "edge",
      "edges_zero": "edge",
      "edges": "edges",
      "nodes-data": {
        "id": "Node ID",
        "label": "Node label",
        "size": "Node size",
        "color": "Node color",
        "x": "Node x position",
        "y": "Node y position",
        "attributes": "Other attributes",
        "attribute-name": "Attribute name",
        "attribute-value": "Attribute value",
        "new-attribute": "Add new attribute"
      },
      "edges-data": {
        "id": "Edge ID",
        "source": "Edge source",
        "target": "Edge target",
        "label": "Edge label",
        "color": "Edge color",
        "weight": "Edge weight",
        "attributes": "Other attributes",
        "attribute-name": "Attribute name",
        "attribute-value": "Attribute value",
        "new-attribute": "Add new attribute"
      },
      "warnings": {
        "missing": "{{nbValues}} missing values",
        "wrong": "{{nbValues}} values are not quantitative",
        "invalid_data": "The value \"{{value}}\" cannot be interpreted as a \"{{type}}\" value."
      },
      "field": {
        "id": "Identifier",
        "label": "Label",
        "type": "Type",
        "date-format": "Date format",
        "separator": "Keywords separator",
        "will_be_serialized_as": "{{type}} will be serialized as"
      }
    },
    "open": {
      "title": "Open a graph file",
      "local": {
        "title": "Open a local file",
        "button_text": "Select a local file",
        "dragndrop_text": "GEXF, GRAPHML or Graphology JSON are supported. You can also directly drop a file here.",
        "success": "File {{filename}} has been successfully loaded",
        "error": "An error occurred while opening the file. Please check that the file is a valid."
      },
      "github": {
        "must-be-signed": "This feature requires to be connected on GitHub",
        "title": "Open a file from GitHub",
        "no-data": "You have no GEXF, GRAPHML or Graphology JSON file saved on GitHub",
        "file-open-external": "Open {{filename}} on Gist",
        "select-file": "Select a file",
        "success": "File {{filename}} has been successfully loaded",
        "error": "A technical error occurred. Please check your connectivity or try later."
      },
      "new": {
        "title": "Open an empty graph",
        "message": "Current graph will be cleared, are you sure you want to continue ?",
        "success": "Empty graph loaded"
      },
      "remote": {
        "success": "File {{filename}} has been successfully loaded",
        "error": "An error occurred while opening the file. Please check your connectivity and that the file is a valid."
      }
    },
    "save": {
      "title": "Save workspace as...",
      "github": {
        "title": "Save on GitHub",
        "field": {
          "filename": "Filename",
          "description": "Description",
          "isPublic": "Create a public Gist"
        },
        "success": "File '{{filename}}' has been successfully saved",
        "error": "An error occurred while saving your graph. Please check your connectivity or try later."
      },
      "local": {
        "title": "Save locally",
        "description": "Click below to download the workspace as a JSON file",
        "success": "Graph has been saved locally",
        "error": "Failed to save the graph locally"
      }
    },
    "export": {
      "title": "Export graph",
      "png": {
        "title": "Export PNG snapshot",
        "success": "Your graph PNG export has successfully been saved.",
        "fields": {
          "filename": "Filename",
          "width": "Width (in pixels)",
          "height": "Height (in pixels)",
          "preserve_camera": "Preserve current camera position"
        }
      },
      "gexf": {
        "title": "Export GEXF",
        "success": "Your GEXF export has successfully been saved.",
        "error": "GEXF export has failed"
      }
    },
    "clone_in_new_tab": {
      "title": "Clone in a new tab",
      "success": "Your graph clone has successfully been opened in a new tab."
    },
    "caption": {
      "color": "Color {{itemType}} by",
      "size": "Size {{itemType}} by",
      "title": "Caption",
      "disabled": "Caption is available once appearance has been set."
    }
  },
  "datatable": {
    "nodes_matching_zero": "<strong>No node</strong> matching the search query",
    "nodes_matching_one": "<strong>{{count, number}}</strong> node matching the search query",
    "nodes_matching": "<strong>{{count, number}}</strong> nodes matching the search query",
    "nodes_not_matching_zero": "<strong>No node</strong> not matching the search query",
    "nodes_not_matching_one": "<strong>{{count, number}}</strong> node not matching the search query",
    "nodes_not_matching": "<strong>{{count, number}}</strong> nodes not matching the search query",
    "edges_matching_zero": "<strong>No edge</strong> matching the search query",
    "edges_matching_one": "<strong>{{count, number}}</strong> edge matching the search query",
    "edges_matching": "<strong>{{count, number}}</strong> edges matching the search query",
    "edges_not_matching_zero": "<strong>No edge</strong> not matching the search query",
    "edges_not_matching_one": "<strong>{{count, number}}</strong> edge not matching the search query",
    "edges_not_matching": "<strong>{{count, number}}</strong> edges not matching the search query",
    "save_cell": "Save cell",
    "protected_columns": {
      "id": "ID",
      "selected": "Selected?",
      "preview": "Preview",
      "degree": "Degree",
      "sourceId": "Source ID",
      "targetId": "Target ID"
    },
    "sort_asc": "Sort A→Z (0→9)",
    "sort_desc": "Sort Z→A (9→0)",
    "create_column": "Create column",
    "save_and_create_column": "Save and create column",
    "modify_column": "Modify column",
    "duplicate_column": "Duplicate column",
    "move_left": "Move to the left",
    "move_right": "Move to the right",
    "insert_left": "Insert new column to the left",
    "insert_right": "Insert new column to the right",
    "column_label": "label"
  },
  "metrics": {
    "title": "Metrics",
    "compute_one": "Compute metric",
    "compute": "Compute metrics",
    "success_one": "The {{items}} metric \"{{metrics}}\" has been added to the data.",
    "success": "The {{items}} metrics \"{{metrics}}\" have been added to the data.",
    "description": "This panel allows computing new attributes to the nodes or edges of the graph. These attributes can later be used in the other panels, for appearance or filtering for instance.",
    "placeholder": "Select an algorithm",
    "attributes_placeholder": "None",
    "nodes_attribute_already_exists": "A node attribute named \"{{field}}\" already exists. Its values will be overridden.",
    "edges_attribute_already_exists": "An edge attribute named \"{{field}}\" already exists. Its values will be overridden.",
    "nodes": {
      "louvain": {
        "title": "Louvain community detection",
        "description": "This algorithm aims at splitting the nodes as densely connected groups.",
        "attributes": {
          "modularityClass": "Modularity class attribute name"
        },
        "parameters": {
          "getEdgeWeight": {
            "title": "Edge weight attribute",
            "description": "An edge attribute that would represent edge weights."
          },
          "fastLocalMoves": {
            "title": "Fast local moves",
            "description": "Whether to use a well-known optimization relying on a queue set to traverse the graph more efficiently."
          },
          "randomWalk": {
            "title": "Random walk",
            "description": "Whether to traverse the graph randomly."
          },
          "resolution": {
            "title": "Resolution",
            "description": "An increased resolution should produce more communities."
          }
        }
      },
      "pagerank": {
        "title": "PageRank",
        "attributes": {
          "pagerank": "PageRank attribute name"
        },
        "parameters": {
          "getEdgeWeight": {
            "title": "Edge weight attribute"
          },
          "alpha": {
            "title": "Alpha"
          },
          "maxIterations": {
            "title": "Max iterations"
          },
          "tolerance": {
            "title": "Tolerance"
          }
        }
      },
      "betweennessCentrality": {
        "title": "Betweenness centrality",
        "attributes": {
          "betweennessCentrality": "Betweenness centrality attribute name"
        },
        "parameters": {
          "getEdgeWeight": {
            "title": "Edge weight attribute"
          },
          "normalize": {
            "title": "Normalize output?"
          }
        }
      },
      "degree": {
        "title": "Degree",
        "attributes": {
          "degree": "Degree attribute name"
        },
        "parameters": {
          "getEdgeWeight": {
            "title": "Edge weight attribute"
          },
          "kind": {
            "title": "Type of degree",
            "values": {
              "degree": "Degree",
              "inDegree": "Incoming degree",
              "outDegree": "Outgoing degree"
            }
          }
        }
      },
      "hits": {
        "title": "HITS",
        "attributes": {
          "authorities": "Authority score attribute name",
          "hubs": "Hub score attribute name"
        },
        "parameters": {
          "getEdgeWeight": {
            "title": "Edge weight attribute"
          },
          "maxIterations": {
            "title": "Max iterations"
          },
          "normalize": {
            "title": "Normalize output?"
          },
          "tolerance": {
            "title": "Tolerance"
          }
        }
      }
    },
    "edges": {
      "disparity": {
        "title": "Disparity",
        "attributes": {
          "disparity": "Disparity attribute name"
        },
        "parameters": {
          "getEdgeWeight": {
            "title": "Edge weight attribute"
          }
        }
      },
      "simmelianStrength": {
        "title": "Simmelian strength",
        "attributes": {
          "simmelianStrength": "Simmelian strength attribute name"
        }
      }
    },
    "mixed": {
      "louvainEdgeAmbiguity": {
        "title": "Louvain edges ambiguity",
        "description": "This algorithm helps exploring ambiguity in Louvain community detection. It runs the Louvain algorithm N times, and analyzes how consistent Louvain is along multiple runs, looking on each edge if its extremities are in the same cluster or not..",
        "attributes": {
          "coMembershipScore": "Edge co-membership attribute name (i.e. the percentage of times Louvain set the same community for both of its extremities)",
          "bridgeNessEdgeScore": "Edge bridge-ness attribute name (i.e. 1 - the co-membership score)",
          "ambiguityScore": "Edge ambiguity score name (the inverse of the consensus of all the Louvain runs, 0 when all Louvain runs agree, and 1 when they disagree the most)",
          "meanAmbiguityScore": "Node average linked edges ambiguity score attribute name",
          "sourceCommunityId": "Edge source modularity classes (for coloring purpose in the preview only)"
        },
        "parameters": {
          "runs": {
            "title": "Louvain runs",
            "description": "The number of times to run Louvain algorithm."
          },
          "getEdgeWeight": {
            "title": "Louvain edge weight attribute",
            "description": "An edge attribute that would represent edge weights."
          },
          "resolution": {
            "title": "Louvain resolution",
            "description": "An increased resolution should produce more communities."
          }
        },
        "preview": "Observe ambiguity visually",
        "preview_subtitle": "(will open a new tab)",
        "preview_description": "One way to represent the edges ambiguity visually, is to use the modularity classes to color edges, while highlighting in white the most ambiguous nodes and edges."
      }
    }
  },
  "layouts": {
    "title": "Layout",
    "description": "This panel allows computing new coordinates to nodes of the graph. ",
    "placeholder": "Select a layout algorithm",
    "exec": {
      "success": "Layout \"{{layout}}\" has successfully been applied.",
      "started": "Layout {{layout}} is running",
      "stopped": "Layout {{layout}} has been stopped"
    },
    "random": {
      "title": "Random",
      "description": "Random layout positioning every node by choosing each coordinates uniformly at random on the interval [0, 1)",
      "parameters": {
        "scale": {
          "title": "Scale",
          "description": "Scale of the layout"
        },
        "center": {
          "title": "Center",
          "description": "Center of the layout"
        }
      }
    },
    "circular": {
      "title": "Circular",
      "description": "Arranges the node in a circle",
      "parameters": {
        "scale": {
          "title": "Scale",
          "description": "Scale of the layout"
        },
        "center": {
          "title": "Center",
          "description": "Center of the layout"
        }
      }
    },
    "circlePack": {
      "title": "CirclePack",
      "description": "Arranges the nodes as a bubble chart, according to specified attributes",
      "parameters": {
        "scale": {
          "title": "Scale",
          "description": "Scale of the layout"
        },
        "groupingField": {
          "title": "Hierarchy attribute",
          "description": "An optional attribute to use to group the nodes"
        },
        "center": {
          "title": "Center",
          "description": "Center of the layout"
        }
      }
    },
    "fa2": {
      "title": "ForceAtlas2",
      "buttons": {
        "autoSettings": {
          "title": "Guess settings",
          "description": "Generates settings that fit the current graph the best"
        }
      },
      "parameters": {
        "adjustSizes": {
          "title": "Adjust sizes?",
          "description": "Should the node’s sizes be taken into account?"
        },
        "barnesHutOptimize": {
          "title": "barnesHutOptimize",
          "description": "Whether to use the Barnes-Hut approximation to compute repulsion in O(n*log(n)) rather than default O(n^2), n being the number of nodes"
        },
        "barnesHutTheta": {
          "title": "barnesHutTheta",
          "description": "Barnes-Hut approximation theta parameter"
        },
        "edgeWeightInfluence": {
          "title": "Edge weight influence",
          "description": "Influence of the edge’s weights on the layout"
        },
        "gravity": {
          "title": "Gravity",
          "description": "Strength of the layout’s gravity"
        },
        "linLogMode": {
          "title": "linLog mode",
          "description": "Whether to use Noack’s LinLog model."
        },
        "outboundAttractionDistribution": {
          "title": "Out bound attraction distribution"
        },
        "scalingRatio": {
          "title": "Scaling ratio"
        },
        "slowDown": {
          "title": "Slow down?"
        },
        "strongGravityMode": {
          "title": "Strong gravity mode?"
        }
      }
    },
    "force": {
      "title": "Force directed",
      "parameters": {
        "attraction": {
          "title": "Attraction",
          "description": "Importance of the attraction force, that attracts each pair of connected nodes like elastics"
        },
        "repulsion": {
          "title": "Repulsion",
          "description": "Importance of the repulsion force, that attracts each pair of nodes like magnets"
        },
        "gravity": {
          "title": "Gravity",
          "description": "Importance of the gravity force, that attracts all nodes to the center"
        },
        "inertia": {
          "title": "Inertia",
          "description": "Percentage of a node vector displacement that is preserved at each step. 0 means no inertia, 1 means no friction"
        },
        "maxMove": {
          "title": "Maximum move",
          "description": "Maximum length a node can travel at each step, in pixel"
        }
      }
    },
    "noverlap": {
      "title": "Noverlap",
      "description": "Anti-collision layout algorithm",
      "parameters": {
        "gridSize": {
          "title": "Grid size",
          "description": "Number of grid cells horizontally and vertically subdivising the graph’s space. This is used as an optimization scheme. Set it to 1 and you will have O(n²) time complexity, which can sometimes perform better with very few nodes."
        },
        "margin": {
          "title": "Margin",
          "description": "Margin to keep between nodes"
        },
        "expansion": {
          "title": "Expansion",
          "description": "Percentage of current space that nodes could attempt to move outside of"
        },
        "ratio": {
          "title": "Ratio",
          "description": "Ratio scaling node sizes"
        },
        "speed": {
          "title": "Speed",
          "description": "Dampening factor that will slow down node movements to ease the overall process"
        }
      }
    },
    "script": {
      "title": "Custom layout",
      "description": "Write your own layout by creating a function that returns a {x,y} object for each node",
      "parameters": {}
    },
    "quality": {
      "title": "Layout quality",
      "description": "Are connected nodes closer thanks to the layout?",
      "enable": "Enable Connected-closeness",
      "showGrid": "Show the Δmax grid",
      "caption_CMax": "of edges are shorter than Δmax thanks to the layout",
      "caption_deltaMax": "Grid size = Δmax = "
    }
  },
  "file": {
    "title": "Data management",
    "login_capabilities": "You can log into GitHub from Gephi Lite, to save and load graph files directly as GitHub Gists:"
  },
  "common": {
    "add": "Add",
    "all": "All",
    "apply": "Apply",
    "cancel": "Cancel",
    "clear": "Clear",
    "close": "Close",
    "collapse": "Collapse",
    "confirm": "Confirm",
    "copy": "Copy",
    "created": "Created",
    "delete": "Delete",
    "disabled": "Disabled",
    "download": "Download",
    "edit": "Edit",
    "expand": "Expand",
    "enabled": "Enabled",
    "filename": "Filename",
    "from": "From",
    "hide": "Hide",
    "load-more": "Load more",
    "loading": "Loading",
    "min": "Min",
    "max": "Max",
    "none": "None",
    "open": "Open",
    "open_file": "Open {{filename}}",
    "open_code_editor": "Open code editor",
    "remove": "Remove",
    "reset": "Reset",
    "save": "Save",
    "save-and-run": "Save and run",
    "select": "Select...",
    "start": "Start",
    "stop": "Stop",
    "size": "Size",
    "show": "Show",
    "show_more": "Show more",
    "show_less": "Show less",
    "submit": "Submit",
    "to": "To",
    "updated": "Updated",
    "colon": ":"
  },
  "cloud": {
    "github": {
      "title": "GitHub",
      "auth": {
        "title": "GitHub authentification",
        "asking_for_device_code": "Asking GitHub for device code",
        "copy_code": "Copy the code below, and click on \"Open GitHub\" button. It will opened a new tab, on which GitHub will ask you the code",
        "copy_success": "Code saved in clipboard",
        "waiting_validation": "Waiting validation"
      },
      "disconnect": {
        "title": "Disconnect from GitHub?",
        "message": "Are you sure you want to disconnect gephi-lite from GitHub?",
        "action": "Disconnect",
        "success": "You have been disconnected fom GitHub"
      }
    }
  },
  "search": {
    "graph": {
      "placeholder": "Search nodes, edges",
      "no_result": "No results",
      "help": "Type something to search",
      "other_result": "... and {{count, number}} other results",
      "select_all_nodes": "Add {{count, number}} nodes in the selection",
      "select_all_edges": "Add {{count, number}} edges in the selection"
    },
    "nodes": {
      "placeholder": "Search a node ...",
      "no_result": "No node found",
      "help": "Type something to find a node",
      "other_result": "... and {{count, number}} other nodes",
      "select_all": "Select all {{count, number}} matching nodes"
    },
    "edges": {
      "placeholder": "Search an edge...",
      "no_result": "No edge found",
      "help": "Type something to find an edge",
      "other_result": "... and {{count, number}} other edges",
      "select_all": "Select all {{count, number}} matching edges"
    }
  },
  "settings": {
    "title": "User's settings",
    "danger-zone": {
      "title": "Danger zone",
      "reset-state": {
        "title": "Reset application state",
        "description": "All your data will be deleted, even the settings saved locally (ie. in your browser). Are you sure ?",
        "success": "Application's state has been cleared"
      }
    },
    "theme": {
      "auto": "Auto",
      "light": "Light",
      "dark": "Dark"
    }
  },
  "pages": {
    "graph": "Graph",
    "data": "Data"
  },
  "workspace": {
    "menu": {
      "open": "Open...",
      "new": "Create a new workspace",
      "duplicate": "Duplicate in a new tab",
      "save_as": "Save as...",
      "save": "Save",
      "export_image": "Export image",
      "export_graph_file": "Export graph file",
      "github_signin": "Sign-in to GitHub",
      "github_signout": "Disconnect from GitHub"
    }
  }
}
